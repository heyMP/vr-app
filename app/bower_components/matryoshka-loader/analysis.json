{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "demo/behavior/loader-element.html",
      "properties": [
        {
          "name": "_relatedElements",
          "type": "Array",
          "description": "List of all child elements that have propagated their events to this element.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 21,
              "column": 6
            },
            "end": {
              "line": 24,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]",
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "loading",
          "type": "boolean",
          "description": "True if the element or one of it's children are still loading.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "loaded",
          "type": "boolean",
          "description": "True if the element its self and all children are loaded",
          "privacy": "public",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 44,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "hostLoading",
          "type": "boolean",
          "description": "Flag to set if the element its self is loading",
          "privacy": "public",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onHostLoading\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "defer",
          "type": "boolean",
          "description": "Flag to prevent bubbling of loading state to parent, it doesn't fire anything, but it can still receive events\nfrom child elements.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "countdown",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 43,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "relatedLoading",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_onHostLoading",
          "description": "When the hostLoading property of the element changes, we need to fire of some events.\nIf defer is set, we prevent the firing of events.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newHostLoading"
            }
          ],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "_isLoaded",
          "description": "Calculate the loaded state of the element",
          "privacy": "private",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "relatedElements"
            },
            {
              "name": "hostLoading"
            }
          ],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "_isLoading",
          "description": "Calculate the loading state of the element",
          "privacy": "private",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "relatedElements"
            },
            {
              "name": "hostLoading"
            }
          ],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "_onMatryoshkaLoading",
          "description": "When an event has fired that a child has started loading it get's added to the _relatedElements list..",
          "privacy": "private",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "_onMatryoshkaLoaded",
          "description": "When an event has fired that a child element is loaded we recheck everything",
          "privacy": "private",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "checkLoaded",
          "description": "Force a recheck of the elements loading state, normally called automatically.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "addRelatedElement",
          "description": "Ability to manually add a related elements that it needs to check for their loaded state.\nThe element passed must implement MatryoshkaLoaderBehavior as well.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 158,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem",
              "type": "HTMLElement",
              "description": "Optional parameter with the event that triggers."
            }
          ],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "removeRelatedElement",
          "description": "Remove an element from being watch for it's loading state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem"
            }
          ],
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "_areRelatedElementsLoading",
          "description": "Gives back a boolean of certain elements are still loading",
          "privacy": "private",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "relatedElements"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "_calculateRelatedLoading",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "relatedElements"
            }
          ]
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 39,
          "column": 12
        },
        "end": {
          "line": 67,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "loading",
          "description": "True if the element or one of it's children are still loading.",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "loaded",
          "description": "True if the element its self and all children are loaded",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 44,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "host-loading",
          "description": "Flag to set if the element its self is loading",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "defer",
          "description": "Flag to prevent bubbling of loading state to parent, it doesn't fire anything, but it can still receive events\nfrom child elements.",
          "sourceRange": {
            "file": "../../matryoshka-loader-behavior.html",
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "MatryoshkaLoaderBehavior"
        },
        {
          "name": "countdown",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 43,
              "column": 25
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "related-loading",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "demo/behavior/loader-element.html",
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 17
            }
          }
        }
      ],
      "tagname": "loader-element"
    },
    {
      "description": "",
      "summary": "",
      "path": "demo/behavior/non-loader-element.html",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 12
        },
        "end": {
          "line": 22,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "demo/behavior/non-loader-element.html",
            "start": {
              "line": 16,
              "column": 4
            },
            "end": {
              "line": 16,
              "column": 17
            }
          }
        }
      ],
      "tagname": "non-loader-element"
    },
    {
      "description": "",
      "summary": "",
      "path": "demo/mixin/mixin-loader-element.html",
      "properties": [
        {
          "name": "countdown",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 50,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hostLoading",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "relatedLoading",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_calculateRelatedLoading",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "relatedElements"
            }
          ]
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 46,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MixinLoaderElement",
      "attributes": [
        {
          "name": "countdown",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 50,
              "column": 27
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "host-loading",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": 11
            }
          },
          "metadata": {}
        },
        {
          "name": "related-loading",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "demo/mixin/mixin-loader-element.html",
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 17
            }
          }
        }
      ],
      "tagname": "mixin-loader-element"
    },
    {
      "description": "",
      "summary": "",
      "path": "demo/mixin/non-mixin-loader-element.html",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 4
        },
        "end": {
          "line": 27,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MixinNonLoaderElement",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "demo/mixin/non-mixin-loader-element.html",
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 17
            }
          }
        }
      ],
      "tagname": "non-mixin-loader-element"
    }
  ],
  "mixins": [
    {
      "description": "",
      "summary": "Defines a loading flag for elements that automatically take into account the loading state of the child\nelements. For a visual explanation, take a look at the demo section, that might explain something more.",
      "path": "matryoshka-loader-mixin.html",
      "properties": [
        {
          "name": "__relatedElements",
          "type": "Array",
          "description": "List of all child elements that have propagated their events to this element.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 10
            },
            "end": {
              "line": 31,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "loading",
          "type": "boolean",
          "description": "True if the element or one of it's children are still loading.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 10
            },
            "end": {
              "line": 41,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "loaded",
          "type": "boolean",
          "description": "True if the element its self and all children are loaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "hostLoading",
          "type": "boolean",
          "description": "Flag to set if the element its self is loading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 60,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onHostLoading\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "defer",
          "type": "boolean",
          "description": "Flag to prevent bubbling of loading state to parent, it doesn't fire anything, but it can still receive events\nfrom child elements.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onHostLoading",
          "description": "When the hostLoading property of the element changes, we need to fire of some events.\nIf defer is set, we prevent the firing of events.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hostLoading"
            }
          ]
        },
        {
          "name": "_isLoaded",
          "description": "Calculate the loaded state of the element",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "relatedElements"
            },
            {
              "name": "hostLoading"
            }
          ]
        },
        {
          "name": "_isLoading",
          "description": "Calculate the loading state of the element",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "relatedElements"
            },
            {
              "name": "hostLoading"
            }
          ]
        },
        {
          "name": "_onMatryoshkaLoading",
          "description": "When an event has fired that a child has started loading it get's added to the __relatedElements list..",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_onMatryoshkaLoaded",
          "description": "When an event has fired that a child element is loaded we recheck everything",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "checkLoaded",
          "description": "Force a recheck of the elements loading state, normally called automatically.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "addRelatedElement",
          "description": "Ability to manually add a related elements that it needs to check for their loaded state.\nThe element passed must implement MatryoshkaLoaderMixin as well.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem",
              "type": "HTMLElement",
              "description": "Optional parameter with the event that triggers."
            }
          ]
        },
        {
          "name": "removeRelatedElement",
          "description": "Remove an element from being watch for it's loading state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem"
            }
          ]
        },
        {
          "name": "_areRelatedElementsLoading",
          "description": "Gives back a boolean of certain elements are still loading",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "relatedElements"
            }
          ],
          "return": {
            "type": "boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/mixin.html",
          "description": "Child Loading state"
        },
        {
          "url": "demo/mixin-defer.html",
          "description": "Defer children loading state"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 207,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "MatryoshkaLoaderMixin",
      "attributes": [
        {
          "name": "loading",
          "description": "True if the element or one of it's children are still loading.",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 10
            },
            "end": {
              "line": 41,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "loaded",
          "description": "True if the element its self and all children are loaded",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "host-loading",
          "description": "Flag to set if the element its self is loading",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 60,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "defer",
          "description": "Flag to prevent bubbling of loading state to parent, it doesn't fire anything, but it can still receive events\nfrom child elements.",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ],
  "metadata": {
    "polymer": {
      "behaviors": [
        {
          "description": "🚨 Deprecated, please use MatryoshkaLoaderMixin 🚨\n\n`MatryoshkaLoaderBehavior` defines a loading flag for elements that automatically take into account the loading\nstate of the child elements.\n\nFor a visual explanation, take a look at the demo section, that might explain something more.",
          "summary": "",
          "path": "matryoshka-loader-behavior.html",
          "properties": [
            {
              "name": "_relatedElements",
              "type": "Array",
              "description": "List of all child elements that have propagated their events to this element.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 21,
                  "column": 6
                },
                "end": {
                  "line": 24,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "[]"
            },
            {
              "name": "loading",
              "type": "boolean",
              "description": "True if the element or one of it's children are still loading.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 29,
                  "column": 6
                },
                "end": {
                  "line": 34,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "loaded",
              "type": "boolean",
              "description": "True if the element its self and all children are loaded",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 6
                },
                "end": {
                  "line": 44,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "hostLoading",
              "type": "boolean",
              "description": "Flag to set if the element its self is loading",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 49,
                  "column": 6
                },
                "end": {
                  "line": 53,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_onHostLoading\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "defer",
              "type": "boolean",
              "description": "Flag to prevent bubbling of loading state to parent, it doesn't fire anything, but it can still receive events\nfrom child elements.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 6
                },
                "end": {
                  "line": 62,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "_onHostLoading",
              "description": "When the hostLoading property of the element changes, we need to fire of some events.\nIf defer is set, we prevent the firing of events.",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 4
                },
                "end": {
                  "line": 85,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "newHostLoading"
                }
              ]
            },
            {
              "name": "_isLoaded",
              "description": "Calculate the loaded state of the element",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 91,
                  "column": 4
                },
                "end": {
                  "line": 93,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "relatedElements"
                },
                {
                  "name": "hostLoading"
                }
              ]
            },
            {
              "name": "_isLoading",
              "description": "Calculate the loading state of the element",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 99,
                  "column": 4
                },
                "end": {
                  "line": 101,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "relatedElements"
                },
                {
                  "name": "hostLoading"
                }
              ]
            },
            {
              "name": "_onMatryoshkaLoading",
              "description": "When an event has fired that a child has started loading it get's added to the _relatedElements list..",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 4
                },
                "end": {
                  "line": 118,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_onMatryoshkaLoaded",
              "description": "When an event has fired that a child element is loaded we recheck everything",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 124,
                  "column": 4
                },
                "end": {
                  "line": 126,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "checkLoaded",
              "description": "Force a recheck of the elements loading state, normally called automatically.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 131,
                  "column": 4
                },
                "end": {
                  "line": 133,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 135,
                  "column": 4
                },
                "end": {
                  "line": 137,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "addRelatedElement",
              "description": "Ability to manually add a related elements that it needs to check for their loaded state.\nThe element passed must implement MatryoshkaLoaderBehavior as well.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 144,
                  "column": 4
                },
                "end": {
                  "line": 158,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "elem",
                  "type": "HTMLElement",
                  "description": "Optional parameter with the event that triggers."
                }
              ]
            },
            {
              "name": "removeRelatedElement",
              "description": "Remove an element from being watch for it's loading state.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 164,
                  "column": 4
                },
                "end": {
                  "line": 173,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "elem"
                }
              ]
            },
            {
              "name": "_areRelatedElementsLoading",
              "description": "Gives back a boolean of certain elements are still loading",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 181,
                  "column": 4
                },
                "end": {
                  "line": 187,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "relatedElements"
                }
              ],
              "return": {
                "type": "boolean"
              }
            }
          ],
          "staticMethods": [],
          "demos": [
            {
              "url": "Behavior demo",
              "description": "demo"
            },
            {
              "url": "demo/matryoshka-loader-behavior.html",
              "description": "Behavior demo"
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 2
            },
            "end": {
              "line": 188,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "MatryoshkaLoaderBehavior",
          "attributes": [
            {
              "name": "loading",
              "description": "True if the element or one of it's children are still loading.",
              "sourceRange": {
                "start": {
                  "line": 29,
                  "column": 6
                },
                "end": {
                  "line": 34,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "loaded",
              "description": "True if the element its self and all children are loaded",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 6
                },
                "end": {
                  "line": 44,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "host-loading",
              "description": "Flag to set if the element its self is loading",
              "sourceRange": {
                "start": {
                  "line": 49,
                  "column": 6
                },
                "end": {
                  "line": 53,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "defer",
              "description": "Flag to prevent bubbling of loading state to parent, it doesn't fire anything, but it can still receive events\nfrom child elements.",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 6
                },
                "end": {
                  "line": 62,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  }
}
