<?php

/**
 * @file
 * Contains hook implementations for the module.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_path_insert().
 */
function fieldable_path_path_insert($path) {
  \Drupal::service('fieldable_path.controller')
    ->checkEntityAndSyncPath($path['source'], $path);
}

/**
 * Implements hook_path_update().
 */
function fieldable_path_path_update($path) {
  \Drupal::service('fieldable_path.controller')
    ->checkEntityAndSyncPath($path['source'], $path);
}

/**
 * Implements hook_path_delete().
 */
function fieldable_path_path_delete($path) {
  \Drupal::service('fieldable_path.controller')
    ->checkEntityAndSyncPath($path['source']);
}

/**
 * Implements hook_module_implements_alter().
 */
function fieldable_path_module_implements_alter(&$implementations, $hook) {

  if (!in_array($hook, ['entity_update', 'entity_insert'])) {
    return;
  }

  // We need to unset pathauto entity change hooks in order to be able
  // to control path alias creation. In some cases, when this module calls
  // entity save on path change outside of entity form, we do not want
  // to let pathauto to create a new path alias and override the correct value.
  if (\Drupal::service('module_handler')->moduleExists('pathauto')) {
    unset($implementations['pathauto']);
  }
}

/**
 * Implements hook_entity_insert().
 */
function fieldable_path_entity_insert(EntityInterface $entity) {
  \Drupal::service('fieldable_path.controller')
    ->pathautoGenerateAlias($entity, 'insert');
}

/**
 * Implements hook_entity_update().
 */
function fieldable_path_entity_update(EntityInterface $entity) {
  \Drupal::service('fieldable_path.controller')
    ->pathautoGenerateAlias($entity, 'update');
}
